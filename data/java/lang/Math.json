[
    {
        "type": "static double",
        "name": "abs",
        "args": ["double a"],
        "desc": "Returns the absolute value of a double value."
    },
    {
        "type": "static float",
        "name": "abs",
        "args": ["float a"],
        "desc": "Returns the absolute value of a float value."
    },
    {
        "type": "static int",
        "name": "abs",
        "args": ["int a"],
        "desc": "Returns the absolute value of an int value."
    },
    {
        "type": "static long",
        "name": "abs",
        "args": ["long a"],
        "desc": "Returns the absolute value of a long value."
    },
    {
        "type": "static double",
        "name": "acos",
        "args": ["double a"],
        "desc": "Returns the arc cosine of a value; the returned angle is in the range 0.0 through pi."
    },
    {
        "type": "static double",
        "name": "asin",
        "args": ["double a"],
        "desc": "Returns the arc sine of a value; the returned angle is in the range -pi/2 through pi/2."
    },
    {
        "type": "static double",
        "name": "atan",
        "args": ["double a"],
        "desc": "Returns the arc tangent of a value; the returned angle is in the range -pi/2 through pi/2."
    },
    {
        "type": "static double",
        "name": "atan2",
        "args": ["double y", "double x"],
        "desc": "Returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta)."
    },
    {
        "type": "static double",
        "name": "cbrt",
        "args": ["double a"],
        "desc": "Returns the cube root of a double value."
    },
    {
        "type": "static double",
        "name": "ceil",
        "args": ["double a"],
        "desc": "Returns the smallest (closest to negative infinity) double value that is greater than or equal to the argument and is equal to a mathematical integer."
    },
    {
        "type": "static double",
        "name": "copySign",
        "args": ["double magnitude", "double sign"],
        "desc": "Returns the first floating-point argument with the sign of the second floating-point argument."
    },
    {
        "type": "static float",
        "name": "copySign",
        "args": ["float magnitude", "float sign"],
        "desc": "Returns the first floating-point argument with the sign of the second floating-point argument."
    },
    {
        "type": "static double",
        "name": "cos",
        "args": ["double a"],
        "desc": "Returns the trigonometric cosine of an angle."
    },
    {
        "type": "static double",
        "name": "cosh",
        "args": ["double x"],
        "desc": "Returns the hyperbolic cosine of a double value."
    },
    {
        "type": "static double",
        "name": "exp",
        "args": ["double a"],
        "desc": "Returns Euler's number e raised to the power of a double value."
    },
    {
        "type": "static double",
        "name": "expm1",
        "args": ["double x"],
        "desc": "Returns ex -1."
    },
    {
        "type": "static double",
        "name": "floor",
        "args": ["double a"],
        "desc": "Returns the largest (closest to positive infinity) double value that is less than or equal to the argument and is equal to a mathematical integer."
    },
    {
        "type": "static int",
        "name": "getExponent",
        "args": ["double d"],
        "desc": "Returns the unbiased exponent used in the representation of a double."
    },
    {
        "type": "static int",
        "name": "getExponent",
        "args": ["float f"],
        "desc": "Returns the unbiased exponent used in the representation of a float."
    },
    {
        "type": "static double",
        "name": "hypot",
        "args": ["double x", "double y"],
        "desc": "Returns sqrt (x^2 + y^2) without intermediate overflow or underflow."
    },
    {
        "type": "static double",
        "name": "IEEEremainder",
        "args": ["double f1", "double f2"],
        "desc": "Computes the remainder operation on two args as prescribed by the IEEE 754 standard."
    },
    {
        "type": "static double",
        "name": "log",
        "args": ["double a"],
        "desc": "Returns the natural logarithm (base e) of a double value."
    },
    {
        "type": "static double",
        "name": "log10",
        "args": ["double a"],
        "desc": "Returns the base 10 logarithm of a double value."
    },
    {
        "type": "static double",
        "name": "log1p",
        "args": ["double x"],
        "desc": "Returns the natural logarithm of the sum of the argument and 1."
    },
    {
        "type": "static double",
        "name": "max",
        "args": ["double a", "double b"],
        "desc": "Returns the greater of two double values."
    },
    {
        "type": "static float",
        "name": "max",
        "args": ["float a", "float b"],
        "desc": "Returns the greater of two float values."
    },
    {
        "type": "static int",
        "name": "max",
        "args": ["int a", "int b"],
        "desc": "Returns the greater of two int values."
    },
    {
        "type": "static long",
        "name": "max",
        "args": ["long a", "long b"],
        "desc": "Returns the greater of two long values."
    },
    {
        "type": "static double",
        "name": "min",
        "args": ["double a", "double b"],
        "desc": "Returns the smaller of two double values."
    },
    {
        "type": "static float",
        "name": "min",
        "args": ["float a", "float b"],
        "desc": "Returns the smaller of two float values."
    },
    {
        "type": "static int",
        "name": "min",
        "args": ["int a", "int b"],
        "desc": "Returns the smaller of two int values."
    },
    {
        "type": "static long",
        "name": "min",
        "args": ["long a", "long b"],
        "desc": "Returns the smaller of two long values."
    },
    {
        "type": "static double",
        "name": "nextAfter",
        "args": ["double start", "double direction"],
        "desc": "Returns the floating-point number adjacent to the first argument in the direction of the second argument."
    },
    {
        "type": "static float",
        "name": "nextAfter",
        "args": ["float start", "double direction"],
        "desc": "Returns the floating-point number adjacent to the first argument in the direction of the second argument."
    },
    {
        "type": "static double",
        "name": "nextUp",
        "args": ["double d"],
        "desc": "Returns the floating-point value adjacent to d in the direction of positive infinity."
    },
    {
        "type": "static float",
        "name": "nextUp",
        "args": ["float f"],
        "desc": "Returns the floating-point value adjacent to f in the direction of positive infinity."
    },
    {
        "type": "static double",
        "name": "pow",
        "args": ["double a", "double b"],
        "desc": "Returns the value of the first argument raised to the power of the second argument."
    },
    {
        "type": "static double",
        "name": "random",
        "args": [""],
        "desc": "Returns a double value with a positive sign, greater than or equal to 0.0 and less than 1.0."
    },
    {
        "type": "static double",
        "name": "rint",
        "args": ["double a"],
        "desc": "Returns the double value that is closest in value to the argument and is equal to a mathematical integer."
    },
    {
        "type": "static long",
        "name": "round",
        "args": ["double a"],
        "desc": "Returns the closest long to the argument, with ties rounding up."
    },
    {
        "type": "static int",
        "name": "round",
        "args": ["float a"],
        "desc": "Returns the closest int to the argument, with ties rounding up."
    },
    {
        "type": "static double",
        "name": "scalb",
        "args": ["double d", "int scaleFactor"],
        "desc": "Return d × 2 ^ scaleFactor rounded as if performed by a single correctly rounded floating-point multiply to a member of the double value set."
    },
    {
        "type": "static float",
        "name": "scalb",
        "args": ["float f", "int scaleFactor"],
        "desc": "Return f × 2 ^ scaleFactor rounded as if performed by a single correctly rounded floating-point multiply to a member of the float value set."
    },
    {
        "type": "static double",
        "name": "signum",
        "args": ["double d"],
        "desc": "Returns the signum function of the argument; zero if the argument is zero, 1.0 if the argument is greater than zero, -1.0 if the argument is less than zero."
    },
    {
        "type": "static float",
        "name": "signum",
        "args": ["float f"],
        "desc": "Returns the signum function of the argument; zero if the argument is zero, 1.0f if the argument is greater than zero, -1.0f if the argument is less than zero."
    },
    {
        "type": "static double",
        "name": "sin",
        "args": ["double a"],
        "desc": "Returns the trigonometric sine of an angle."
    },
    {
        "type": "static double",
        "name": "sinh",
        "args": ["double x"],
        "desc": "Returns the hyperbolic sine of a double value."
    },
    {
        "type": "static double",
        "name": "sqrt",
        "args": ["double a"],
        "desc": "Returns the correctly rounded positive square root of a double value."
    },
    {
        "type": "static double",
        "name": "tan",
        "args": ["double a"],
        "desc": "Returns the trigonometric tangent of an angle."
    },
    {
        "type": "static double",
        "name": "tanh",
        "args": ["double x"],
        "desc": "Returns the hyperbolic tangent of a double value."
    },
    {
        "type": "static double",
        "name": "toDegrees",
        "args": ["double angrad"],
        "desc": "Converts an angle measured in radians to an approximately equivalent angle measured in degrees."
    },
    {
        "type": "static double",
        "name": "toRadians",
        "args": ["double angdeg"],
        "desc": "Converts an angle measured in degrees to an approximately equivalent angle measured in radians."
    },
    {
        "type": "static double",
        "name": "ulp",
        "args": ["double d"],
        "desc": "Returns the size of an ulp of the argument."
    },
    {
        "type": "static float",
        "name": "ulp",
        "args": ["float f"],
        "desc": "Returns the size of an ulp of the argument."
    }
]
